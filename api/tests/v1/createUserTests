from django.test import TestCase
from rest_framework.test import APITestCase
from rest_framework import status
from django.urls import reverse
from api.models import User

class CreateUserAPIViewTestCase(APITestCase):
    def setUp(self):
        self.create_user_url = reverse('v1_create_user')
        self.valid_user_data = {
            'email': 'test@example.com',
            'firstName': 'John',
            'lastName': 'Doe',
            'username': 'johndoe',
            'teamIDs': ['team1', 'team2']
        }
        self.invalid_user_data = {
            'email': 'invalid_email', 
        }

    def test_create_user_success(self):
        response = self.client.post(self.create_user_url, data=self.valid_user_data, format='json')
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
        self.assertEqual(User.objects.count(), 1)
        self.assertEqual(User.objects.get().email, 'test@example.com')

    def test_create_user_invalid_data(self):
        response = self.client.post(self.create_user_url, data=self.invalid_user_data, format='json')
        self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)

    def test_create_user_invalid_content_type(self):
        response = self.client.post(self.create_user_url, data=self.valid_user_data, content_type='text/plain')
        self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)